@use "../globals/breakpoints" as *;

.skills {
  padding-bottom: 4rem;
  z-index: 3;

  h2 {
    text-align: center;
    color: hsl(var(--c-accent-main-medium));
    margin-bottom: 1.5rem;

    @include breakpoint(medium) {
      font-size: var(--fs-700);
    }
  }

  .grid {
    $gap-size: 1rem;

    display: grid;
    gap: $gap-size;

    // padding: 1rem;
    //border: 2px dashed hsl(var(--c-text-medium));
    border-radius: 0.5rem;

    --column-count: 3;
    grid-template-columns: repeat(3, calc((33.333% - ($gap-size * 2 / 3))));
    @include breakpoint(small) {
      --column-count: 4;
      grid-template-columns: repeat(4, calc(25% - ($gap-size * 3 / 4)));
    }
  }

  //SkillCell
  .skill-cell {
    border: 2px dashed hsl(var(--c-text-medium));
    padding: 1px;
    border-radius: 0.25rem;
    height: 100%;
  }

  //Grabbed SkillElement
  .grabbed-skill {
    position: fixed;
    top: 0;
    left: 0;
    pointer-events: none;
    user-select: none;
  }

  //SkillElement
  .skill-element {
    cursor: grab;
    position: relative;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    padding: 1rem;

    color: hsl(var(--c-text-medium-light));
    background-color: hsl(var(--c-accent-dark-high));
    border-radius: 0.25rem;

    user-select: none;
    & * {
      user-select: none;
      pointer-events: none;
    }
    &.hidden {
      display: none;
    }

    //default colors
    .blend {
      transition: background-color 75ms ease-out;
      background-color: hsl(var(--c-text-medium));
    }
    span {
      transition: color 75ms ease-out;
      font-size: var(--fs-300);
      @include breakpoint(medium) {
        font-size: var(--fs-400);
      }
    }
    //hover states
    body:not(.grabbing) &:hover .blend,
    &.grabbed .blend {
      background-color: hsl(var(--c-accent-main-medium));
    }
    body:not(.grabbing) &:hover span,
    &.grabbed span {
      color: hsl(var(--c-accent-main-medium));
    }
  }
}
