@use "../globals/breakpoints" as *;
@use "../globals/utils" as *;

.skills {
  padding-top: 4rem;
  padding-bottom: 4rem;

  & > p {
    margin-top: 1rem;
    text-align: center;
  }

  .grid {
    $gap-size: 1rem;

    display: grid;
    gap: $gap-size;

    border-radius: 0.5rem;

    --column-count: 2;
    @include breakpoint(tiny) {
      --column-count: 3;
    }
    @include breakpoint(small) {
      --column-count: 4;
    }
    grid-template-columns: repeat(
      var(--column-count),
      calc(
        (100% / var(--column-count)) -
          ($gap-size * (var(--column-count) - 1) / var(--column-count))
      )
    );
  }

  //SkillCell
  .skill-cell {
    border: 2px dashed hsl(var(--c-accent-neutral));
    padding: 1px;
    border-radius: 0.25rem;
    height: 100%;

    transition: border-color 125ms ease-out;
    &.attention-grabber {
      .skill-element span {
        color: hsl(var(--c-accent-bright));
      }
      .skill-element .blend {
        background-color: hsl(var(--c-accent-bright));
      }
      border-color: hsl(var(--c-accent-bright));
    }
    &:hover {
      border-color: hsl(var(--c-accent-medium));
    }

    position: relative;
    .attention-grabber {
      pointer-events: none;
      position: absolute;
      top: -3.25em;
      width: 10ch;
      left: 0;
      right: 0;
      margin-inline: auto;

      display: flex;
      justify-content: center;

      text-align: center;
      padding: 0.15em;
      border-radius: 0.3rem;

      font-size: var(--fs-300);
      @include breakpoint(small) {
        font-size: var(--fs-400);
      }
      color: hsl(var(--c-text-light));
      background-color: hsl(var(--c-accent-bright));

      transition: opacity 75ms ease-out;
      &.hide {
        opacity: 0;
      }

      animation-name: attention-grabber-bounce;
      animation-duration: 1000ms;
      animation-iteration-count: infinite;
      animation-timing-function: ease-in-out;

      &::before {
        content: "";
        position: absolute;
        top: 100%;
        border: 0.75rem solid transparent;
        border-top: 0.75rem solid hsl(var(--c-accent-bright));
        transform: scaleX(0.5) translateY(-1px);
      }
    }

    //hover & grab states
    body:not(.grabbing) & {
      cursor: grab;
    }
    body:not(.grabbing) &:hover .blend {
      background-color: hsl(var(--c-accent-medium));
    }
    body:not(.grabbing) &:hover span {
      color: hsl(var(--c-accent-medium));
    }
  }

  //Grabbed SkillElement
  .grabbed-skill {
    position: fixed;
    top: 0;
    left: 0;
    pointer-events: none;
    touch-action: none;
    user-select: none;
    .skill-element {
      box-shadow: 0 0 8px hsl(0 0% 0% / 25%);
    }
  }

  //SkillElement
  .skill-element {
    position: relative;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    padding: 1rem;

    color: hsl(var(--c-accent-dark));
    background-color: hsl(var(--c-accent-neutral-light));
    border-radius: 0.25rem;

    pointer-events: none;
    touch-action: none;
    user-select: none;
    & * {
      user-select: none;
      touch-action: none;
      pointer-events: none;
    }
    &.hidden {
      display: none;
    }

    //default colors
    .blend {
      transition: background-color 75ms ease-out;
      background-color: hsl(var(--c-accent-dark));
    }
    span {
      transition: color 75ms ease-out;
      font-size: var(--fs-300);
      @include breakpoint(medium) {
        font-size: var(--fs-400);
      }
    }
    //grab states
    &.grabbed .blend {
      background: linear-gradient(
        hsl(var(--c-accent-light)),
        hsl(var(--c-accent-medium))
      );
    }
    &.grabbed span {
      color: hsl(var(--c-accent-medium));
    }
  }
}

@keyframes attention-grabber-bounce {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(6px);
  }
  100% {
    transform: translateY(0);
  }
}
